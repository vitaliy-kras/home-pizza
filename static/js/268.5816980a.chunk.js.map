{"version":3,"file":"static/js/268.5816980a.chunk.js","mappings":"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","sources":["webpack://start-pizza/./src/components/ErrorMessage/ErrorMessage.module.scss?14be","components/ErrorMessage/ErrorMessage.tsx","webpack://start-pizza/./src/components/Pizza/Pizza.module.scss?ce38","components/Pizza/Pizza.tsx","pages/SinglePizza/SinglePizzaPage.tsx","pages/SinglePizza/useSinglePizzaService.ts"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"root\":\"ErrorMessage_root__s5mMr\"};","import { FC } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport error_img from '../../assets/img/error-img.png'\r\nimport styles from './ErrorMessage.module.scss'\r\n\r\nconst ErrorMessage: FC = () => {\r\n\treturn (\r\n\t\t<div className={styles.root}>\r\n\t\t\t<img src={error_img} alt='error' />\r\n\t\t\t<h3>\r\n\t\t\t\tВиникла помилка при завантаженні даних про обрану піцу або піци за цим\r\n\t\t\t\tпосилання не існує\r\n\t\t\t</h3>\r\n\t\t\t<Link to='/' className='button button--black'>\r\n\t\t\t\t<span>Повернутись назад</span>\r\n\t\t\t</Link>\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nexport default ErrorMessage\r\n","// extracted by mini-css-extract-plugin\nexport default {\"pizza_item\":\"Pizza_pizza_item__Ji+bA\",\"pizza_description\":\"Pizza_pizza_description__iimmf\",\"pizza_selector\":\"Pizza_pizza_selector__JdplR\",\"buttons\":\"Pizza_buttons__CCTQ5\",\"pizza__active\":\"Pizza_pizza__active__eoT5Y\"};","import React, { FC, useState } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { TypeCartItem } from '../../redux/cart/types'\r\nimport { TypePizza } from '../../redux/pizza/types'\r\nimport { pizzaTypeNames } from '../PizzaBlock/pizzaBlock.data'\r\nimport AddToCartButton from '../ui/AddToCartButton'\r\nimport PizzaParametersSelector from '../ui/PizzaParametersSelector/PizzaParametersSelector'\r\nimport styles from './Pizza.module.scss'\r\n\r\ntype TypePizzaProps = {\r\n\tpizza: TypePizza\r\n}\r\n\r\nconst Pizza: FC<TypePizzaProps> = ({ pizza }) => {\r\n\r\n\tconst [activeType, setActiveType] = useState<string>(pizzaTypeNames[0])\r\n\tconst [activeSize, setActiveSize] = useState<number>(pizza.sizes[0])\r\n\r\n\tconst item: TypeCartItem = {\r\n\t\tid: pizza.id,\r\n\t\ttitle: pizza.title,\r\n\t\tprice: pizza.price,\r\n\t\timageUrl: pizza.imageUrl,\r\n\t\ttype: activeType,\r\n\t\tsize: activeSize,\r\n\t\tcount: 0\r\n\t}\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<div className={styles.pizza_item}>\r\n\t\t\t\t<img draggable='false' src={`${process.env.PUBLIC_URL}/images/big${pizza.imageUrl}`} alt='pizza-img' />\r\n\r\n\t\t\t\t<div className={styles.pizza_description}>\r\n\t\t\t\t\t<h2>{pizza.title}</h2>\r\n\t\t\t\t\t<div>\r\n\t\t\t\t\t\t<span>Рейтинг: </span>\r\n\t\t\t\t\t\t{pizza.rating}\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<p>\r\n\t\t\t\t\t\t<span>Інгредієнти: </span>сир Моцарела, бекон, шинка, помідори\r\n\t\t\t\t\t\tчеррі, томатний соус\r\n\t\t\t\t\t</p>\r\n\t\t\t\t\t<h4>\r\n\t\t\t\t\t\t<span>Ціна: </span>\r\n\t\t\t\t\t\t{pizza.price} грн\r\n\t\t\t\t\t</h4>\r\n\t\t\t\t\t<div className={styles.pizza_selector}>\r\n\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t<h2>Тісто:</h2>\r\n\t\t\t\t\t\t\t<h2>Розмір:</h2>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<PizzaParametersSelector\r\n\t\t\t\t\t\t\tid={pizza.id}\r\n\t\t\t\t\t\t\ttypes={pizza.types}\r\n\t\t\t\t\t\t\tsizes={pizza.sizes}\r\n\t\t\t\t\t\t\tactiveType={activeType}\r\n\t\t\t\t\t\t\tactiveSize={activeSize}\r\n\t\t\t\t\t\t\tsetActiveSize={setActiveSize}\r\n\t\t\t\t\t\t\tsetActiveType={setActiveType}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t\t<div className={styles.buttons}>\r\n\t\t\t\t<Link to='/' className='button button--outline go-back-btn'>\r\n\t\t\t\t\t<span>Повернутись назад</span>\r\n\t\t\t\t</Link>\r\n\t\t\t\t<AddToCartButton selectedPizza={item} />\r\n\t\t\t</div>\r\n\t\t</>\r\n\t)\r\n}\r\n\r\nexport default React.memo(Pizza)\r\n","import { FC, useEffect, useState } from 'react'\r\nimport { useParams } from 'react-router-dom'\r\nimport ErrorMessage from '../../components/ErrorMessage/ErrorMessage'\r\nimport Pizza from '../../components/Pizza/Pizza'\r\nimport Spinner from '../../components/ui/Spinner'\r\nimport { TypePizza } from '../../redux/pizza/types'\r\nimport { useSinglePizzaService } from './useSinglePizzaService'\r\n\r\nconst SinglePizzaPage: FC = () => {\r\n  const [pizzaData, setPizzaData] = useState<TypePizza>()\r\n\tconst { id } = useParams()\r\n\tconst {fetchPizzaById, process, setProcess} = useSinglePizzaService() \r\n\r\n\tuseEffect(()=>{\r\n\tif(id) {\r\n\t\t\tfetchPizzaById(id)\r\n\t\t\t.then(pizza => setPizzaData(pizza))\r\n\t\t\t.then(() => setProcess(\"confirmed\"))\r\n\t}\r\n\t}, [])\r\n\t\r\n\treturn (\r\n\t\t<div className='container'>\r\n\t\t{process === \"loading\" && <Spinner />}\r\n\t\t{process === \"confirmed\" && pizzaData && <Pizza pizza={pizzaData} />}\r\n\t\t{process === \"error\" && <ErrorMessage />}\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nexport default SinglePizzaPage\r\n","import { useCallback, useState } from \"react\"\r\nimport { axiosInstance } from \"../../api\"\r\n\r\nexport const useSinglePizzaService = () => {\r\n\r\n\tconst [process, setProcess] = useState(\"waiting\")\r\n\r\n\t\tconst fetchPizzaById =  useCallback(async (id: string) => {\r\n\t\t\tsetProcess(\"loading\")\r\n\t\t\ttry {\r\n\t\t\t\tconst { data } = await axiosInstance.get(`items/${id}`)\r\n\t\t\t\treturn data\r\n\t\t\t} catch (error) {\r\n\t\t\t\tsetProcess(\"error\")\r\n\t\t\t\tthrow error\r\n\t\t\t}\r\n\t\t}, [])\r\n\r\n\t// const clearError = useCallback(() => {\r\n\t// \tsetProcess(\"loading\")\r\n\t//}, [])\r\n\r\n  return {fetchPizzaById, process, setProcess}\r\n}"],"names":["_jsxs","className","styles","children","_jsx","src","error_img","alt","Link","to","Pizza","_ref","pizza","_useState","useState","pizzaTypeNames","_useState2","_slicedToArray","activeType","setActiveType","_useState3","sizes","_useState4","activeSize","setActiveSize","item","id","title","price","imageUrl","type","size","count","_Fragment","draggable","concat","process","rating","PizzaParametersSelector","types","AddToCartButton","selectedPizza","React","pizzaData","setPizzaData","useParams","_useSinglePizzaServic","setProcess","fetchPizzaById","useCallback","_asyncToGenerator","_regeneratorRuntime","mark","_callee","_yield$axiosInstance$","data","wrap","_context","prev","next","axiosInstance","get","sent","abrupt","t0","stop","_x","apply","arguments","useSinglePizzaService","useEffect","then","Spinner","ErrorMessage"],"sourceRoot":""}